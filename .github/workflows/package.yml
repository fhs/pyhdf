name: package into static linked wheel

on:
  push:
    tags:
    - 'v*' #

jobs:
    packages:
        name: Wheels on ${{ matrix.os }} (${{ matrix.cibw_archs }})
        runs-on: ${{ matrix.os }}
        strategy:
          fail-fast: true
          matrix:
            os: [ubuntu-latest, macos-latest]
            cibw_archs: ["auto"]
        env:
          CIBW_SKIP: "*-musllinux_*"
        steps:
        - uses: actions/checkout@v2

        - uses: actions/setup-python@v2
          name: Install Python
          with:
            python-version: '3.7'

        - name: Install cibuildwheel
          run: |
            python -m pip install cibuildwheel==2.3.1
        - name: Build wheels
          run: |
            python -m cibuildwheel --output-dir dist
          env:
            CIBW_BUILD: '{cp,pp}3*'
            CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
            CIBW_BEFORE_ALL_LINUX: yum -y install epel-release hdf hdf-devel && ln -s /usr/lib64/hdf/lib* /usr/lib64/
            CIBW_ARCHS_LINUX: 'x86_64'
            # (mac-os) Install hdf-4.2.15 from sources
            CIBW_BEFORE_ALL_MACOS: >
              brew install ninja &&
              cd /tmp &&
              git clone https://github.com/HDFGroup/hdf4.git &&
              mkdir build && cd build &&
              ../hdf4/configure --enable-shared --disable-static --disable-fortran --disable-netcdf --enable-java --enable-production --with-zlib --prefix=/usr/local &&
              make install
        - name: Copy wheels into wheelhouse
          run: |
            mkdir wheelhouse
            cp dist/*.whl wheelhouse
        - uses: actions/upload-artifact@v2
          with:
            name: wheelhouse
            path: wheelhouse

    publish:
        name: Publish to PyPI
        needs: [packages]
        runs-on: ubuntu-latest
        steps:
          - name: Download all the dists
            uses: actions/download-artifact@v2
            with:
              name: wheelhouse
              path: ./wheelhouse/

          - name: create source distribution archive for pypi
            run: |
              python -m pip install numpy
              python setup.py sdist -d wheelhouse

          - uses: actions/upload-artifact@v2
            with:
              name: wheelhouse
              path: wheelhouse

          - name: Publish a Python distribution to Test PyPI
            uses: pypa/gh-action-pypi-publish@release/v1
            with:
              user: __token__
              password: ${{ secrets.PYPI_TEST_TOKEN }}
              repository_url: https://test.pypi.org/legacy/
              packages_dir: wheelhouse/
              verbose: true

          - name: Publish SDIST to PyPI  # there are some problems if sdist is not pushed first
            if: github.event.base_ref == 'refs/heads/master'
            uses: pypa/gh-action-pypi-publish@release/v1
            with:
              user: __token__
              password: ${{ secrets.PYPI_API_TOKEN }}
              packages_dir: wheelhouse/*.tar.gz

          - name: Publish a Python distribution to PyPI
            if: github.event.base_ref == 'refs/heads/master'
            uses: pypa/gh-action-pypi-publish@release/v1
            with:
              user: __token__
              password: ${{ secrets.PYPI_API_TOKEN }}
              packages_dir: wheelhouse/
